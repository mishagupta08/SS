ALTER TRIGGER Inv_Gen_SIStock    
ON TrnBillDetails -- 12:17 PM 2020-02-05 added item codes
With Encryption --
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=BillNo,@FSessId=FSessId,@ActiveStatus=ActiveStatus,@BillFor=BillFor FROM INSERTED
SELECT @TRGFireStatus=IsNull(IsCredit,''),@BillType=IsNull(BillType,''),@InTransit=IsNull(InTransit,''),@OrderType=OrderType FROM TrnBillMain Where BillNo=@BillNo

IF UPPER(@TRGFireStatus)='F' --Cmnted on 15Jul17; AND @OrderType<>'O'--@OrderType ='O' 26Apr17 Means Product Request Entry, and we will deduct stock at dispatching time 
  BEGIN 
--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y')
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y'
  END
 
     --- Add: ,ProdType Clm ON Dated: 08Mar14@09:00AM,Saturday
      --WHERE ProdType<>'F'(Condition added on 22Apr17)
   IF UPPER(@InTransit)='N' --- IF Found IsTransit No Add: 07Jan14@12:45PM,Tuesday
   --- INSERT QUERY
    INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType,ItemCode)      
    --BEGIN
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType,itemcode From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
       Union ALL 
          --Add Entry    
     Select FSessId,SoldBy,BillDate,BillNo,FCode,SupplierId,ProductId,BatchNo,Barcode,Qty ,'I' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType,itemcode From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
    --END
   ELSE
    --BEGIN
      --- INSERT QUERY
     INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType,ItemCode)      
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType,itemcode From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
    --END
    
 END -- TRGFire Closing
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO

----------------------------------------------------------------------------------------
ALTER TRIGGER Inv_Gen_SIStock    
ON TrnBillDetails -- 12:17 PM 2020-01-22
With Encryption --
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=BillNo,@FSessId=FSessId,@ActiveStatus=ActiveStatus,@BillFor=BillFor FROM INSERTED
SELECT @TRGFireStatus=IsNull(IsCredit,''),@BillType=IsNull(BillType,''),@InTransit=IsNull(InTransit,''),@OrderType=OrderType FROM TrnBillMain Where BillNo=@BillNo

IF UPPER(@TRGFireStatus)='F' --Cmnted on 15Jul17; AND @OrderType<>'O'--@OrderType ='O' 26Apr17 Means Product Request Entry, and we will deduct stock at dispatching time 
  BEGIN 
--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y')
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y'
  END
 
     --- Add: ,ProdType Clm ON Dated: 08Mar14@09:00AM,Saturday
      --WHERE ProdType<>'F'(Condition added on 22Apr17)
   IF UPPER(@InTransit)='N' --- IF Found IsTransit No Add: 07Jan14@12:45PM,Tuesday
   --- INSERT QUERY
    INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
    --BEGIN
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
       Union ALL 
          --Add Entry    
     Select FSessId,SoldBy,BillDate,BillNo,FCode,SupplierId,ProductId,BatchNo,Barcode,Qty ,'I' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
    --END
   ELSE
    --BEGIN
      --- INSERT QUERY
     INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE (@OrderType <> 'T' or ProdType<>'F')
    --END
    
 END -- TRGFire Closing
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
-----------------------------
ALTER TRIGGER Inv_Gen_SIStock    
ON TrnBillDetails -- 12:17 PM 2019-06-25
With Encryption --
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=BillNo,@FSessId=FSessId,@ActiveStatus=ActiveStatus,@BillFor=BillFor FROM INSERTED
SELECT @TRGFireStatus=IsNull(IsCredit,''),@BillType=IsNull(BillType,''),@InTransit=IsNull(InTransit,''),@OrderType=OrderType FROM TrnBillMain Where BillNo=@BillNo

IF UPPER(@TRGFireStatus)='F' --Cmnted on 15Jul17; AND @OrderType<>'O'--@OrderType ='O' 26Apr17 Means Product Request Entry, and we will deduct stock at dispatching time 
  BEGIN 
--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y')
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y'
  END
 
     --- Add: ,ProdType Clm ON Dated: 08Mar14@09:00AM,Saturday
      --WHERE ProdType<>'F'(Condition added on 22Apr17)
   IF UPPER(@InTransit)='N' --- IF Found IsTransit No Add: 07Jan14@12:45PM,Tuesday
   --- INSERT QUERY
    INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
    --BEGIN
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE ProdType<>'F' 
       Union ALL 
          --Add Entry    
     Select FSessId,SoldBy,BillDate,BillNo,FCode,SupplierId,ProductId,BatchNo,Barcode,Qty ,'I' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE ProdType<>'F' 
    --END
   ELSE
    --BEGIN
      --- INSERT QUERY
     INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE ProdType<>'F'
    --END
    
 END -- TRGFire Closing
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
-------------------------
ALTER TRIGGER Inv_Gen_SIStock    
ON TrnBillDetails --03:36 PM 2018-09-26
With Encryption --
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=BillNo,@FSessId=FSessId,@ActiveStatus=ActiveStatus,@BillFor=BillFor FROM INSERTED
SELECT @TRGFireStatus=IsNull(IsCredit,''),@BillType=IsNull(BillType,''),@InTransit=IsNull(InTransit,''),@OrderType=OrderType FROM TrnBillMain Where BillNo=@BillNo

IF UPPER(@TRGFireStatus)='F' --Cmnted on 15Jul17; AND @OrderType<>'O'--@OrderType ='O' 26Apr17 Means Product Request Entry, and we will deduct stock at dispatching time 
  BEGIN 
--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y')
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y'
  END
 
     --- Add: ,ProdType Clm ON Dated: 08Mar14@09:00AM,Saturday
      --WHERE ProdType<>'F'(Condition added on 22Apr17)
   IF UPPER(@InTransit)='N' --- IF Found IsTransit No Add: 07Jan14@12:45PM,Tuesday
   --- INSERT QUERY
    INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
    --BEGIN
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE SpclOfferId=0 OR (ProdType<>'F' AND SpclOfferId<>0)
       Union ALL 
          --Add Entry    
     Select FSessId,SoldBy,BillDate,BillNo,FCode,SupplierId,ProductId,BatchNo,Barcode,Qty ,'I' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE SpclOfferId=0 OR (ProdType<>'F' AND SpclOfferId<>0)
    --END
   ELSE
    --BEGIN
      --- INSERT QUERY
     INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
          --Less Entry    
     Select FSessId,FCode,BillDate,BillNo,SoldBy,SupplierId,ProductId,BatchNo,Barcode,'-'+ Cast(Qty as Varchar) as Qty,'O' as SType,'SI' as BType,'SI' as Remarks,'Y' as ActiveStatus,SoldBy,'Gen.Thr.TRG.' as StockFor,GetDate()as RecTimeStamp,UserId,Version,@BillType,ProdType From INSERTED WHERE SpclOfferId=0 OR (ProdType<>'F' AND SpclOfferId<>0)
    --END
    
 END -- TRGFire Closing
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
