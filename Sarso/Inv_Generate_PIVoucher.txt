
CREATE TRIGGER Inv_Generate_PIVoucher
ON M_InwardMain -- 06Jan16
With Encryption 
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @MaxVoucherNo as Numeric(18,0)

--- Generate Max Voucher No ---
SELECT @FSessId=FSessId,@ActiveStatus=ActiveStatus FROM INSERTED
SELECT @MaxVoucherNo=Case When Max(VoucherNo) Is Null Then 1 Else Max(VoucherNo)+1 End From TrnVoucher Where FSessID=@FSessID And ActiveStatus='Y'
--- DELETE IF Already Exists ---
IF Exists(SELECT * FROM TrnVoucher WHERE FSessID=@FSessID And ActiveStatus='Y' And VoucherNo=@MaxVoucherNo)
  BEGIN
   DELETE FROM TrnVoucher WHERE FSessID=@FSessID And ActiveStatus='Y' And VoucherNo=@MaxVoucherNo
  END
   
Insert Into TrnVoucher
(FSessId,VoucherNo,VoucherDate,DepoCode,DrTo,CrTo,Amount,Narration,RefNo,BType,AccDocNo,AccDocType,AccDocDate,
AccRemark,ActiveStatus,UserId,UserName,Version)
Select FSessId,@MaxVoucherNo as VoucherNo,RecvDate,InwardBy,InwardBy,SupplierCode,NetPayable,
'Against Purchase Invoice: ' + InwardNo as Narration,InwardNo,'P',0 as AccDocNo,'Purchase Invoice' as AccDocType,
GetDate() as AccDocDate,'' as AccRemark,'Y' as ActiveStatus,UserId,UserName,Version From INSERTED
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
------------------------------------------------------
CREATE TRIGGER Inv_Generate_PIVoucher
ON M_InwardMain -- Create On Dated: 22Sep13,Sunday..17Jan13 (Dpesh)
With Encryption 
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @MaxVoucherNo as Numeric(18,0)

--- Generate Max Voucher No ---
SELECT @FSessId=FSessId,@ActiveStatus=ActiveStatus FROM INSERTED
SELECT @MaxVoucherNo=Case When Max(VoucherNo) Is Null Then 1 Else Max(VoucherNo)+1 End From TrnVoucher Where FSessID=@FSessID And ActiveStatus='Y'
--- DELETE IF Already Exists ---
IF Exists(SELECT * FROM TrnVoucher WHERE FSessID=@FSessID And ActiveStatus='Y' And VoucherNo=@MaxVoucherNo)
  BEGIN
   DELETE FROM TrnVoucher WHERE FSessID=@FSessID And ActiveStatus='Y' And VoucherNo=@MaxVoucherNo
  END
   
Insert Into TrnVoucher
(FSessId,VoucherNo,VoucherDate,DepoCode,DrTo,CrTo,Amount,Narration,RefNo,BType,AccDocNo,AccDocType,AccDocDate,
AccRemark,ActiveStatus,UserId,UserName,Version)
Select FSessId,@MaxVoucherNo as VoucherNo,RecvDate,InwardBy,InwardBy,SupplierCode,NetPayable,
'Against Purchase Invoice: ' + InwardNo as Narration,InwardNo,'P',0 as AccDocNo,'Purchase Invoice' as AccDocType,
GetDate() as AccDocDate,'' as AccRemark,'Y' as ActiveStatus,UserId,UserName,Version From INSERTED
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END