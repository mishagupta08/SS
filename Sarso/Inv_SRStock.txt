alter TRIGGER Inv_SRStock    --03:29 PM 2020-01-28
ON TrnSalesReturnDetail -- 
With Encryption 
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @prodID as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @Reason as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=SreturnNo,@FSessId=FSessId,@prodID=ProdID,@ActiveStatus=ActiveStatus,@Reason=Reason FROM INSERTED

--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y' AND @prodID=ProdID)
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y' AND @prodID=ProdID
  END
 

if (@Reason <> 'D' and @Reason <> 'B')
Begin
	INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
	Select FSessID,ReturnTo,ReturnDate,SreturnNo,ReturnBy,0,ProdID,BatchNo,BatchNo,-ReturnQty,'O','SR','Sales Return','Y',ReturnTo,ReturnBY,Getdate(),88,Version,'SR',ProdType FROM INSERTED WHERE ReturnQty>0--TrnSalesReturnDetail WHERE SReturnNo=@BillNo
	UNION ALL
	Select FSessID,ReturnBy,ReturnDate,SreturnNo,ReturnTo,0,ProdID,BatchNo,BatchNo,ReturnQty,'I','SR','Sales Return','Y',ReturnTo,ReturnBY,Getdate(),88,Version,'SR',ProdType FROM INSERTED WHERE ReturnQty>0--TrnSalesReturnDetail WHERE SReturnNo=@BillNo
End
Else
Begin
    INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
	Select FSessID,ReturnTo,ReturnDate,SreturnNo,ReturnBy,0,ProdID,BatchNo,BatchNo,-ReturnQty,'O','SR','Sales Return','Y',ReturnTo,ReturnBY,Getdate(),88,Version,'SR',ProdType FROM INSERTED WHERE ReturnQty>0--TrnSalesReturnDetail WHERE SReturnNo=@BillNo
	
End
 
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
-----------------------------------------

-----------------------------------------

-------------------------------
Alter TRIGGER Inv_SRStock    --03:29 PM 2018-05-30
ON TrnSalesReturnDetail -- 
With Encryption 
AFTER INSERT  
As    
    
 BEGIN 
  BEGIN TRANSACTION 
   BEGIN TRY


DECLARE @BillNo as varchar(50)
DECLARE @FSessId as INT
DECLARE @ActiveStatus as Char(1)
DECLARE @BillFor as varchar(50)
DECLARE @prodID as varchar(50)
DECLARE @TRGFireStatus as Char(1)
DECLARE @BillType as varchar(50) -- Add: 03Jan14@12:36PM,Friday
DECLARE @InTransit as Char(1)-- Add: 07Jan14@12:45PM,Tuesday
DECLARE @OrderType as Char(1)-- Add: 07Jan14@12:45PM,Tuesday

SELECT @BillNo=SreturnNo,@FSessId=FSessId,@prodID=ProdID,@ActiveStatus=ActiveStatus FROM INSERTED

--- DELETE IF Already Exists --- --- Lst Alteration: 03Jan14@12:36PM,Friday (Set 'SI' as BType & Add New Clm BillType) 
IF Exists(SELECT * FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y' AND @prodID=ProdID)
  BEGIN
   DELETE FROM Im_CurrentStock WHERE RefNo=@BillNo And FSessId=@FSessId And ActiveStatus='Y' AND @prodID=ProdID
  END
 
INSERT INTO Im_CurrentStock(FSessId,SupplierCode,StockDate,RefNo,FCode,GroupId,ProdId,BatchCode,Barcode,Qty,SType,BType,Remarks,ActiveStatus,EntryBy,StockFor,RecTimeStamp,UserId,Version,BillType,ProdType)      
Select FSessID,ReturnTo,ReturnDate,SreturnNo,ReturnBy,0,ProdID,BatchNo,BatchNo,-ReturnQty,'O','SR','Sales Return','Y',ReturnTo,ReturnBY,Getdate(),88,Version,'SR',ProdType FROM INSERTED WHERE ReturnQty>0--TrnSalesReturnDetail WHERE SReturnNo=@BillNo
UNION ALL
Select FSessID,ReturnBy,ReturnDate,SreturnNo,ReturnTo,0,ProdID,BatchNo,BatchNo,ReturnQty,'I','SR','Sales Return','Y',ReturnTo,ReturnBY,Getdate(),88,Version,'SR',ProdType FROM INSERTED WHERE ReturnQty>0--TrnSalesReturnDetail WHERE SReturnNo=@BillNo
 
 
     COMMIT TRANSACTION 
  END TRY
  
  
BEGIN CATCH
ROLLBACK TRANSACTION 

DECLARE @errmsg NVARCHAR(4000)
DECLARE @errseverity INT
DECLARE @errstate INT

SELECT @errmsg = ERROR_MESSAGE(), @errseverity = ERROR_SEVERITY(), @errstate = ERROR_STATE()
RAISERROR(@errmsg, @errseverity, @errstate)

END CATCH
END
GO
-----------------------------------------
